// Copyright (C) 2024 Evan McBroom
//
// Native asn1 encoding and decoding defined
// for the use of their types in cng.h
//
#pragma once
#include <phnt_windows.h>

#include <wincrypt.h>

#ifdef __cplusplus
extern "C" {
#endif

enum _ASN1_ID;
enum ASN1_DATA_TYPE;

struct ASN1_ALLOC_PARA;
struct ASN1_ENVIRONMENT_DATA;
struct ASN1_MODULE;
struct ASN1_MODULE_HANDLE__;
struct ASN1_OBJECT;
struct ASN1_OID_INFO;
struct ASN1_OID_INFO_ENTRY;
struct ASN1_OID_INFO_TABLE;
struct ASN1_STREAM;
struct ASN1_STRUCTURE;
struct ASN1_TYPE_DESCRIPTOR;

typedef enum _ASN1_ID {
    ASN1_ID_ANY = 0,
    ASN1_ID_BOOLEAN = 1,
    ASN1_ID_INTEGER = 2,
    ASN1_ID_BITSTRING = 3,
    ASN1_ID_OCTETSTRING = 4,
    ASN1_ID_NULL = 5,
    ASN1_ID_OBJECT_IDENTIFIER = 6,
    ASN1_ID_OBJECT_DESCRIPTOR = 7,
    ASN1_ID_EXTERNAL = 8,
    ASN1_ID_REAL = 9,
    ASN1_ID_ENUMERATED = 10,
    ASN1_ID_EMBEDDED_PDV = 11,
    ASN1_ID_STRING_UTF8 = 12,
    ASN1_ID_13 = 13,
    ASN1_ID_14 = 14,
    ASN1_ID_15 = 15,
    ASN1_ID_SEQUENCE = 16,
    ASN1_ID_SET = 17,
    ASN1_ID_STRING_NUMERIC = 18,
    ASN1_ID_STRING_PRINTABLE = 19,
    ASN1_ID_STRING_T61 = 20,
    ASN1_ID_STRING_VIDEOTEX = 21,
    ASN1_ID_STRING_IA5 = 22,
    ASN1_ID_TIME_UTC = 23,
    ASN1_ID_TIME_GENERALIZED = 24,
    ASN1_ID_STRING_GRAPHIC = 25,
    ASN1_ID_STRING_ISO646 = 26,
    ASN1_ID_STRING_VISIBLE = 26,
    ASN1_ID_STRING_GENERAL = 27,
    ASN1_ID_STRING_UNIVERSAL = 28,
    ASN1_ID_29 = 29,
    ASN1_ID_STRING_BMP = 30,
} ASN1_ID,
    *PASN1_ID;

typedef enum ASN1_DATA_TYPE {
    ASN1_DATA_PRIMITIVE = 0,
    ASN1_DATA_SEQUENCE = 1,
    ASN1_DATA_ARRAY = 2,
    ASN1_DATA_CHOICE = 3,
    ASN1_DATA_SZ = 4,
    ASN1_DATA_WSZ = 5,
    ASN1_DATA_BLOB = 6,
    ASN1_DATA_BITS = 7,
    ASN1_DATA_FILETIME = 8,
    ASN1_DATA_BOOL = 9,
    ASN1_DATA_INT32 = 10,
    ASN1_DATA_INT64 = 11,
    ASN1_DATA_BYTES = 12,
    ASN1_DATA_REVERSE_BYTES = 13,
    ASN1_DATA_OID = 14,
    ASN1_DATA_OID_BLOB = 15,
    ASN1_DATA_LINKED_LIST = 16,
    ASN1_DATA_CHILD = 17,
} ASN1_DATA_TYPE,
    *PASN1_DATA_TYPE;

typedef struct ASN1_ALLOC_PARA {
    ULONG cbSize;
    // clang-format off
    LPVOID (*pfnAlloc)(ULONG);
    VOID (*pfnFree)(LPVOID);
    // clang-format on
} ASN1_ALLOC_PARA, *PASN1_ALLOC_PARA;

typedef struct ASN1_TYPE_DESCRIPTOR {
    LPCSTR szName;
    ULONG cbOffset;
    union {
        ULONG cbCountOffset;
        ULONG cbChoiceOffset;
        ULONG cbPresentOffset;
        ULONG cbBitmaskOffset;
        ULONG cbNextOffset;
    };
    ULONG Tag;
    DWORD dwOptions;
    ULONG ExplicitTag;
    LPCVOID pvDefault;
    LONG min;
    LONG max;
    LPVOID pvReserved;
} ASN1_TYPE_DESCRIPTOR, *PASN1_TYPE_DESCRIPTOR;

typedef struct ASN1_OBJECT {
    ASN1_TYPE_DESCRIPTOR Descriptor;
    const struct ASN1_STRUCTURE* pStruct;
    DWORD dwFlags;
    // clang-format off
    LONG (*pfnSetDefault)(const struct ASN1_OBJECT*, LPVOID, PUCHAR*, PLONG);
    // clang-format on
} ASN1_OBJECT, *PASN1_OBJECT;

typedef struct ASN1_STREAM {
    PBYTE pbData;
    SIZE_T cbData;
    PBYTE pbPtr;
    PBYTE pbEnd;
    LPVOID pvAllocPara;
    // clang-format off
    LONG (*pfnCheckSize)(struct ASN1_STREAM*, ULONG);
    // clang-format on
    LPVOID pvReserved;
    LPVOID pvErrorInfo;
} ASN1_STREAM, *PASN1_STREAM;

typedef struct ASN1_STRUCTURE {
    ASN1_DATA_TYPE Type;
    ULONG cbStructSize;
    // clang-format off
    LONG(*fpEncode)(const struct ASN1_OBJECT*, PASN1_STREAM, const VOID*, ULONG);
    LONG(*fpDecode)(const struct ASN1_OBJECT*, PASN1_STREAM, ULONG, PVOID, PUCHAR*, PLONG);
    // clang-format on
    ULONG cObject;
    const PASN1_OBJECT rgObject;
} ASN1_STRUCTURE, *PASN1_STRUCTURE;

typedef struct ASN1_MODULE {
    DWORD dwMagic;
    DWORD dwFlags;
    LPCWSTR wszName;
    ULONG cPDUs;
    const PASN1_OBJECT* rgPDU;
} ASN1_MODULE, *PASN1_MODULE;

typedef struct ASN1_ENVIRONMENT_DATA {
    ULONG cModule;
    const PASN1_MODULE* rgpModule;
    // clang-format off
    LONG (*pfnEtwObjectDecodingFailed)(const PASN1_MODULE, ULONG, const PASN1_OBJECT, LONG, const UCHAR*, ULONG);
    // clang-format on
} ASN1_ENVIRONMENT_DATA, *PASN1_ENVIRONMENT_DATA;

typedef struct ASN1_MODULE_HANDLE__ {
    LONG unused;
} ASN1_MODULE_HANDLE, *PASN1_MODULE_HANDLE;

typedef struct ASN1_OID_INFO {
    LPCWSTR wszName;
    ULONG cbOID;
    LPCSTR szOID;
    DWORD dwGroupId;
    CRYPT_INTEGER_BLOB Encoded;
    DWORD dwFlags;
} ASN1_OID_INFO, *PASN1_OID_INFO;

typedef struct ASN1_OID_INFO_ENTRY {
    ULONG ulOidHash;
    ASN1_OID_INFO OidInfo;
} ASN1_OID_INFO_ENTRY, *PASN1_OID_INFO_ENTRY;

typedef struct ASN1_OID_INFO_TABLE {
    ULONG cItem;
    PASN1_OID_INFO_ENTRY rgItem;
} ASN1_OID_INFO_TABLE, *PASN1_OID_INFO_TABLE;

// The following function declerations are in the order of their ordinal number for ntasn1.dll

NTSTATUS RtlAsn1Encode(PASN1_MODULE_HANDLE, ULONG, ULONG, PBYTE, ULONG, PULONG, LPVOID);
NTSTATUS RtlAsn1EncodeAndAllocate(PASN1_MODULE_HANDLE, ULONG, ULONG, PASN1_ALLOC_PARA, PBYTE*, PULONG, LPVOID);
NTSTATUS RtlAsn1Decode(PASN1_MODULE_HANDLE, ULONG, ULONG, PBYTE, ULONG, PULONG, LPVOID, PULONG);
NTSTATUS RtlAsn1DecodeAndAllocate(PASN1_MODULE_HANDLE, ULONG, ULONG, PBYTE, ULONG, PULONG, PASN1_ALLOC_PARA, LPVOID*);
NTSTATUS RtlAsn1GetModuleHandle(LPWSTR);
NTSTATUS ASN1_FindOidInfo(LPSTR, ULONG);
NTSTATUS ASN1_FindOidInfoByEoid(PBYTE, ULONG, ULONG, DWORD);
// Commented out due the declaration already being included in wincrypt.h
//NTSTATUS CryptEncodeObjectEx(ULONG, LPSTR, LPVOID, ULONG, PCRYPT_ENCODE_PARA*, LPVOID, PULONG);
//NTSTATUS CryptDecodeObjectEx(ULONG, LPSTR, PBYTE, ULONG, ULONG, PCRYPT_DECODE_PARA, LPVOID, PULONG);
NTSTATUS ASN1_DecodeObject(PASN1_OBJECT, ULONG, PBYTE, ULONG, PULONG, LPVOID, PULONG);
NTSTATUS ASN1_EncodeObject(PASN1_OBJECT, ULONG, PBYTE, ULONG, PULONG, LPVOID);
NTSTATUS ASN1_FindObjectEntry(PASN1_MODULE_HANDLE, ULONG);
NTSTATUS ASN1DER_EncLength32(PASN1_STREAM, ULONG);
NTSTATUS ASN1DER_EncTag(PASN1_STREAM, ULONG);
NTSTATUS ASN1DER_EncExplicitTag(PASN1_STREAM, ULONG, ULONG);
NTSTATUS ASN1DER_EncUnsignedInteger32(PASN1_STREAM, ULONG, ULONG);
NTSTATUS ASN1DER_EncCanonicalInteger(PASN1_STREAM, PBYTE, ULONG, ULONG, DWORD, DWORD);
NTSTATUS ASN1DER_EncInteger(PASN1_STREAM, PBYTE, ULONG, ULONG, DWORD, DWORD);
NTSTATUS ASN1DER_EncNull(PASN1_STREAM, ULONG);
NTSTATUS ASN1DER_EncBool(PASN1_STREAM, DWORD, ULONG);
NTSTATUS ASN1DER_EncOctetString(PASN1_STREAM, PBYTE, ULONG, ULONG);
NTSTATUS ASN1DER_EncCanonicalBitString(PASN1_STREAM, PBYTE, ULONG, ULONG, ULONG, DWORD);
NTSTATUS ASN1DER_EncBitString(PASN1_STREAM, PBYTE, ULONG, ULONG, ULONG, DWORD);
NTSTATUS ASN1DER_EncChar16String(PASN1_STREAM, LPWSTR, ULONG, ULONG);
NTSTATUS ASN1DER_EncChar32String(PASN1_STREAM, PULONG, ULONG, ULONG);
NTSTATUS ASN1DER_EncChar32StringW(PASN1_STREAM, LPWSTR, ULONG, ULONG);
NTSTATUS ASN1DER_EncChar8StringA(PASN1_STREAM, LPSTR, ULONG, ULONG);
NTSTATUS ASN1DER_EncChar8StringW(PASN1_STREAM, LPWSTR, ULONG, ULONG);
NTSTATUS ASN1DER_EncUTF8String(PASN1_STREAM, LPWSTR, ULONG, ULONG);
NTSTATUS ASN1DER_EncObjectIdentifierStr(PASN1_STREAM, LPSTR, ULONG);
NTSTATUS ASN1DER_EncSystemTimeGeneralized(PASN1_STREAM, PSYSTEMTIME, ULONG);
NTSTATUS ASN1DER_EncFileTimeGeneralized(PASN1_STREAM, PFILETIME, ULONG);
NTSTATUS ASN1DER_EncSystemTimeUTC(PASN1_STREAM, PSYSTEMTIME, ULONG);
NTSTATUS ASN1DER_EncFileTimeUTC(PASN1_STREAM, PFILETIME, ULONG);
NTSTATUS ASN1DER_DecLength32(PASN1_STREAM, PULONG);
NTSTATUS ASN1DER_DecTagLength(PASN1_STREAM, PULONG, PULONG);
NTSTATUS ASN1DER_DecPeekTag(PASN1_STREAM, PULONG, PULONG);
NTSTATUS ASN1DER_DecTag(PASN1_STREAM, PULONG);
NTSTATUS ASN1DER_DecExplicitTag(PASN1_STREAM, ULONG, ULONG, PULONG);
NTSTATUS ASN1DER_DecSequenceOfAny(PASN1_STREAM, ULONG, ULONG, PULONG, ULONG, PULONG, PBYTE*, PULONG);
NTSTATUS ASN1DER_DecInteger32(PASN1_STREAM, PLONG, ULONG);
NTSTATUS ASN1DER_DecMultiByteInteger(PASN1_STREAM, PBYTE, ULONG, PULONG, ULONG, DWORD, DWORD);
NTSTATUS ASN1DER_DecNull(PASN1_STREAM, ULONG);
NTSTATUS ASN1DER_DecBool(PASN1_STREAM, PLONG, ULONG);
NTSTATUS ASN1DER_DecChar16String(PASN1_STREAM, ULONG, LPWSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecChar32String(PASN1_STREAM, ULONG, PULONG, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecChar32StringW(PASN1_STREAM, ULONG, LPWSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecChar8StringA(PASN1_STREAM, ULONG, LPSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecChar8StringW(PASN1_STREAM, ULONG, LPWSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecUTF8String(PASN1_STREAM, ULONG, LPWSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecOctetString(PASN1_STREAM, PBYTE, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecBitString(PASN1_STREAM, PBYTE, ULONG, PULONG, PULONG, ULONG, DWORD);
NTSTATUS ASN1DER_DecObjectIdentifierStr(PASN1_STREAM, LPSTR, ULONG, PULONG, ULONG);
NTSTATUS ASN1DER_DecFileTime(PASN1_STREAM, PFILETIME);
NTSTATUS ASN1DER_DecFileTimeGeneralized(PASN1_STREAM, PFILETIME, ULONG);
NTSTATUS ASN1DER_DecFileTimeUTC(PASN1_STREAM, PFILETIME, ULONG);
NTSTATUS ASN1DER_EncodedOIDToDotValA(PBYTE, ULONG, LPSTR, ULONG, PULONG);
NTSTATUS ASN1DER_EncodedOIDToDotValW(PBYTE, ULONG, LPWSTR, ULONG, PULONG);
// These are best guesses for the ASN1BER_* parameter types
NTSTATUS ASN1BER_DecTagLength(PASN1_STREAM, PULONG, PULONG);
NTSTATUS ASN1BER_DecExplicitTag(PASN1_STREAM, ULONG, ULONG, PULONG);

#ifdef __cplusplus
} // Closes extern "C" above
namespace Ntasn1 {
    // Enumerations
    using DATA_TYPE = ASN1_DATA_TYPE;
    using ID = _ASN1_ID;

    using ALLOC_PARA = ASN1_ALLOC_PARA;
    using ENVIRONMENT_DATA = ASN1_ENVIRONMENT_DATA;
    using MODULE = ASN1_MODULE;
    using MODULE_HANDLE = ASN1_MODULE_HANDLE__;
    using OBJECT = ASN1_OBJECT;
    using OID_INFO = ASN1_OID_INFO;
    using OID_INFO_ENTRY = ASN1_OID_INFO_ENTRY;
    using OID_INFO_TABLE = ASN1_OID_INFO_TABLE;
    using STREAM = ASN1_STREAM;
    using STRUCTURE = ASN1_STRUCTURE;
    using TYPE_DESCRIPTOR = ASN1_TYPE_DESCRIPTOR;
}
#endif